# Generated by Django 4.1.5 on 2023-02-15 11:28

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('category', models.IntegerField(choices=[(0, 'main_game'), (1, 'dlc_addon'), (2, 'expansion'), (3, 'bundle'), (4, 'standalone_expansion'), (5, 'mod'), (6, 'episode'), (7, 'season'), (8, 'remake'), (9, 'remaster'), (10, 'expanded_game'), (11, 'port'), (12, 'fork'), (13, 'pack'), (14, 'update')], null=True)),
                ('cover', models.CharField(max_length=255, null=True)),
                ('first_release_date', models.DateField(null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('screenshots', models.TextField(null=True)),
                ('artworks', models.TextField(null=True)),
                ('slug', models.CharField(max_length=255, null=True)),
                ('storyline', models.TextField(null=True)),
                ('summary', models.TextField(null=True)),
                ('url', models.CharField(max_length=255, null=True)),
                ('created_at', models.IntegerField(null=True)),
                ('updated_at', models.IntegerField(null=True)),
                ('rating_count', models.IntegerField(null=True)),
                ('rating', models.FloatField(null=True)),
                ('total_rating_count', models.IntegerField(null=True)),
                ('total_rating', models.FloatField(null=True)),
                ('aggregated_rating', models.FloatField(null=True)),
                ('aggregated_rating_count', models.IntegerField(null=True)),
                ('follows', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('category', models.IntegerField(choices=[('console', 1), ('arcade', 2), ('platform', 3), ('operating_system', 4), ('portable_console', 5), ('computer', 6)], null=True)),
                ('abbreviation', models.CharField(max_length=255, null=True)),
                ('alternative_name', models.CharField(max_length=255, null=True)),
                ('created_at', models.IntegerField()),
                ('updated_at', models.IntegerField()),
                ('generation', models.IntegerField(null=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('slug', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Scrapping',
            fields=[
                ('table_name', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('updated_at', models.IntegerField(default=0)),
                ('last_id', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Screenshot',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('alpha_channel', models.BooleanField(default=False)),
                ('animated', models.BooleanField(default=False)),
                ('image_id', models.CharField(max_length=255)),
                ('game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='game_screenshot', to='api.game')),
            ],
        ),
        migrations.CreateModel(
            name='ReleaseDate',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('m', models.IntegerField()),
                ('y', models.IntegerField()),
                ('created_at', models.IntegerField()),
                ('updated_at', models.IntegerField()),
                ('region', models.IntegerField(choices=[('europe', 1), ('north_america', 2), ('australia', 3), ('new_zealand', 4), ('japan', 5), ('china', 6), ('asia', 7), ('worldwide', 8), ('korea', 9), ('brazil', 10)])),
                ('game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.game')),
                ('platform', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.platform')),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='platforms',
            field=models.ManyToManyField(to='api.platform'),
        ),
        migrations.CreateModel(
            name='Cover',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('alpha_channel', models.BooleanField(default=False)),
                ('animated', models.BooleanField(default=False)),
                ('image_id', models.CharField(max_length=255)),
                ('game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='game_cover', to='api.game')),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_date', models.IntegerField()),
                ('change_date_category', models.CharField(choices=[('YYYYMMMMDD', 0), ('YYYYMMMM', 1), ('YYYY', 2), ('YYYYQ1', 3), ('YYYYQ2', 4), ('YYYYQ3', 5), ('YYYYQ4', 6), ('TBD', 7)], max_length=20)),
                ('checksum', models.UUIDField()),
                ('country', models.IntegerField()),
                ('created_at', models.IntegerField()),
                ('description', models.TextField()),
                ('name', models.CharField(max_length=255)),
                ('slug', models.CharField(max_length=255)),
                ('start_date', models.IntegerField()),
                ('start_date_category', models.CharField(choices=[('YYYYMMMMDD', 0), ('YYYYMMMM', 1), ('YYYY', 2), ('YYYYQ1', 3), ('YYYYQ2', 4), ('YYYYQ3', 5), ('YYYYQ4', 6), ('TBD', 7)], max_length=20)),
                ('updated_at', models.IntegerField()),
                ('url', models.CharField(max_length=255)),
                ('developed', models.ManyToManyField(related_name='developed', to='api.game')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.company')),
                ('published', models.ManyToManyField(related_name='published', to='api.game')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
